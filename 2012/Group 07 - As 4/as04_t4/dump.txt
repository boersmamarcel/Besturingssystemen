
as4_t4:     file format elf32-i386


Disassembly of section .init:

08048258 <_init>:
 8048258:	55                   	push   ebp
 8048259:	89 e5                	mov    ebp,esp
 804825b:	53                   	push   ebx
 804825c:	83 ec 04             	sub    esp,0x4
 804825f:	e8 00 00 00 00       	call   8048264 <_init+0xc>
 8048264:	5b                   	pop    ebx
 8048265:	81 c3 cc 12 00 00    	add    ebx,0x12cc
 804826b:	8b 93 fc ff ff ff    	mov    edx,DWORD PTR [ebx-0x4]
 8048271:	85 d2                	test   edx,edx
 8048273:	74 05                	je     804827a <_init+0x22>
 8048275:	e8 1e 00 00 00       	call   8048298 <__gmon_start__@plt>
 804827a:	e8 a5 00 00 00       	call   8048324 <frame_dummy>
 804827f:	e8 7c 01 00 00       	call   8048400 <__do_global_ctors_aux>
 8048284:	58                   	pop    eax
 8048285:	5b                   	pop    ebx
 8048286:	c9                   	leave  
 8048287:	c3                   	ret    

Disassembly of section .plt:

08048288 <__gmon_start__@plt-0x10>:
 8048288:	ff 35 34 95 04 08    	push   DWORD PTR ds:0x8049534
 804828e:	ff 25 38 95 04 08    	jmp    DWORD PTR ds:0x8049538
 8048294:	00 00                	add    BYTE PTR [eax],al
	...

08048298 <__gmon_start__@plt>:
 8048298:	ff 25 3c 95 04 08    	jmp    DWORD PTR ds:0x804953c
 804829e:	68 00 00 00 00       	push   0x0
 80482a3:	e9 e0 ff ff ff       	jmp    8048288 <_init+0x30>

080482a8 <__libc_start_main@plt>:
 80482a8:	ff 25 40 95 04 08    	jmp    DWORD PTR ds:0x8049540
 80482ae:	68 08 00 00 00       	push   0x8
 80482b3:	e9 d0 ff ff ff       	jmp    8048288 <_init+0x30>

080482b8 <strcpy@plt>:
 80482b8:	ff 25 44 95 04 08    	jmp    DWORD PTR ds:0x8049544
 80482be:	68 10 00 00 00       	push   0x10
 80482c3:	e9 c0 ff ff ff       	jmp    8048288 <_init+0x30>

Disassembly of section .text:

080482d0 <_start>:
 80482d0:	31 ed                	xor    ebp,ebp
 80482d2:	5e                   	pop    esi
 80482d3:	89 e1                	mov    ecx,esp
 80482d5:	83 e4 f0             	and    esp,0xfffffff0
 80482d8:	50                   	push   eax
 80482d9:	54                   	push   esp
 80482da:	52                   	push   edx
 80482db:	68 90 83 04 08       	push   0x8048390
 80482e0:	68 a0 83 04 08       	push   0x80483a0
 80482e5:	51                   	push   ecx
 80482e6:	56                   	push   esi
 80482e7:	68 4c 83 04 08       	push   0x804834c
 80482ec:	e8 b7 ff ff ff       	call   80482a8 <__libc_start_main@plt>
 80482f1:	f4                   	hlt    
 80482f2:	90                   	nop
 80482f3:	90                   	nop

080482f4 <__do_global_dtors_aux>:
 80482f4:	55                   	push   ebp
 80482f5:	89 e5                	mov    ebp,esp
 80482f7:	83 ec 08             	sub    esp,0x8
 80482fa:	80 3d 54 95 04 08 00 	cmp    BYTE PTR ds:0x8049554,0x0
 8048301:	3e                   	ds
 8048302:	74 0c                	je     8048310 <__do_global_dtors_aux+0x1c>
 8048304:	eb 1c                	jmp    8048322 <__do_global_dtors_aux+0x2e>
 8048306:	83 c0 04             	add    eax,0x4
 8048309:	a3 50 95 04 08       	mov    ds:0x8049550,eax
 804830e:	ff d2                	call   edx
 8048310:	a1 50 95 04 08       	mov    eax,ds:0x8049550
 8048315:	8b 10                	mov    edx,DWORD PTR [eax]
 8048317:	85 d2                	test   edx,edx
 8048319:	75 eb                	jne    8048306 <__do_global_dtors_aux+0x12>
 804831b:	c6 05 54 95 04 08 01 	mov    BYTE PTR ds:0x8049554,0x1
 8048322:	c9                   	leave  
 8048323:	c3                   	ret    

08048324 <frame_dummy>:
 8048324:	55                   	push   ebp
 8048325:	89 e5                	mov    ebp,esp
 8048327:	83 ec 08             	sub    esp,0x8
 804832a:	a1 60 94 04 08       	mov    eax,ds:0x8049460
 804832f:	85 c0                	test   eax,eax
 8048331:	74 15                	je     8048348 <frame_dummy+0x24>
 8048333:	b8 00 00 00 00       	mov    eax,0x0
 8048338:	85 c0                	test   eax,eax
 804833a:	74 0c                	je     8048348 <frame_dummy+0x24>
 804833c:	c7 04 24 60 94 04 08 	mov    DWORD PTR [esp],0x8049460
 8048343:	e8 b8 7c fb f7       	call   0 <_init-0x8048258>
 8048348:	c9                   	leave  
 8048349:	c3                   	ret    
 804834a:	90                   	nop
 804834b:	90                   	nop

0804834c <main>:
 804834c:	55                   	push   ebp
 804834d:	89 e5                	mov    ebp,esp
 804834f:	83 ec 78             	sub    esp,0x78
 8048352:	83 e4 f0             	and    esp,0xfffffff0
 8048355:	b8 00 00 00 00       	mov    eax,0x0
 804835a:	83 c0 0f             	add    eax,0xf
 804835d:	83 c0 0f             	add    eax,0xf
 8048360:	c1 e8 04             	shr    eax,0x4
 8048363:	c1 e0 04             	shl    eax,0x4
 8048366:	29 c4                	sub    esp,eax
 8048368:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
 804836c:	7e 17                	jle    8048385 <main+0x39>
 804836e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 8048371:	83 c0 04             	add    eax,0x4
 8048374:	8b 00                	mov    eax,DWORD PTR [eax]
 8048376:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804837a:	8d 45 98             	lea    eax,[ebp-0x68]
 804837d:	89 04 24             	mov    DWORD PTR [esp],eax
 8048380:	e8 33 ff ff ff       	call   80482b8 <strcpy@plt>
 8048385:	b8 00 00 00 00       	mov    eax,0x0
 804838a:	c9                   	leave  
 804838b:	c3                   	ret    
 804838c:	90                   	nop
 804838d:	90                   	nop
 804838e:	90                   	nop
 804838f:	90                   	nop

08048390 <__libc_csu_fini>:
 8048390:	55                   	push   ebp
 8048391:	89 e5                	mov    ebp,esp
 8048393:	5d                   	pop    ebp
 8048394:	c3                   	ret    
 8048395:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8048399:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080483a0 <__libc_csu_init>:
 80483a0:	55                   	push   ebp
 80483a1:	89 e5                	mov    ebp,esp
 80483a3:	57                   	push   edi
 80483a4:	56                   	push   esi
 80483a5:	53                   	push   ebx
 80483a6:	e8 4f 00 00 00       	call   80483fa <__i686.get_pc_thunk.bx>
 80483ab:	81 c3 85 11 00 00    	add    ebx,0x1185
 80483b1:	83 ec 0c             	sub    esp,0xc
 80483b4:	e8 9f fe ff ff       	call   8048258 <_init>
 80483b9:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 80483bf:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 80483c5:	29 c7                	sub    edi,eax
 80483c7:	c1 ff 02             	sar    edi,0x2
 80483ca:	85 ff                	test   edi,edi
 80483cc:	74 24                	je     80483f2 <__libc_csu_init+0x52>
 80483ce:	31 f6                	xor    esi,esi
 80483d0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 80483d3:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80483d7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
 80483da:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80483de:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 80483e1:	89 04 24             	mov    DWORD PTR [esp],eax
 80483e4:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 80483eb:	83 c6 01             	add    esi,0x1
 80483ee:	39 fe                	cmp    esi,edi
 80483f0:	72 de                	jb     80483d0 <__libc_csu_init+0x30>
 80483f2:	83 c4 0c             	add    esp,0xc
 80483f5:	5b                   	pop    ebx
 80483f6:	5e                   	pop    esi
 80483f7:	5f                   	pop    edi
 80483f8:	5d                   	pop    ebp
 80483f9:	c3                   	ret    

080483fa <__i686.get_pc_thunk.bx>:
 80483fa:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80483fd:	c3                   	ret    
 80483fe:	90                   	nop
 80483ff:	90                   	nop

08048400 <__do_global_ctors_aux>:
 8048400:	55                   	push   ebp
 8048401:	89 e5                	mov    ebp,esp
 8048403:	53                   	push   ebx
 8048404:	bb 50 94 04 08       	mov    ebx,0x8049450
 8048409:	83 ec 04             	sub    esp,0x4
 804840c:	a1 50 94 04 08       	mov    eax,ds:0x8049450
 8048411:	eb 07                	jmp    804841a <__do_global_ctors_aux+0x1a>
 8048413:	83 eb 04             	sub    ebx,0x4
 8048416:	ff d0                	call   eax
 8048418:	8b 03                	mov    eax,DWORD PTR [ebx]
 804841a:	83 f8 ff             	cmp    eax,0xffffffff
 804841d:	75 f4                	jne    8048413 <__do_global_ctors_aux+0x13>
 804841f:	83 c4 04             	add    esp,0x4
 8048422:	5b                   	pop    ebx
 8048423:	5d                   	pop    ebp
 8048424:	c3                   	ret    
 8048425:	90                   	nop
 8048426:	90                   	nop
 8048427:	90                   	nop

Disassembly of section .fini:

08048428 <_fini>:
 8048428:	55                   	push   ebp
 8048429:	89 e5                	mov    ebp,esp
 804842b:	53                   	push   ebx
 804842c:	83 ec 04             	sub    esp,0x4
 804842f:	e8 00 00 00 00       	call   8048434 <_fini+0xc>
 8048434:	5b                   	pop    ebx
 8048435:	81 c3 fc 10 00 00    	add    ebx,0x10fc
 804843b:	e8 b4 fe ff ff       	call   80482f4 <__do_global_dtors_aux>
 8048440:	59                   	pop    ecx
 8048441:	5b                   	pop    ebx
 8048442:	c9                   	leave  
 8048443:	c3                   	ret    
